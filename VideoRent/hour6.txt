********* intro
restful webservices using asp.net webapi
we will talk about DTO 

*************** what is Web ApI

quick view of asp.net mvc architecture

when a request arrives 
mvc framework handles that request to an action in controller  

this action most of the times returns a view

which is then parsed by RazorViewEngine

then html markup is generated on the server
and then returned to the client

now instead of return markup data

they can also return data

one benefit is
* sending raw data requires less rescources
* raw data requires less bandwidth

so data arrives faster at client
* we can build a broad range of client

these apps simply call our endpoints

get the data and generate the view locally

We call this endpoint
Dataservices or Web API
because they just return data and not markup

these are not just for our mobile and web apps

they can be consumed by other websites as well

for ex twitter,etc 

expose public services which we can consume in our websites

we can have services not only to get data 

but also modifying like adding a customer


the framework we use is 
Asp.net Web Api


.net core uses both asp.net and asp.net web api

we will be building some app using jquery

**********************************RestFul Convention

we will be building CRUD for customers

end point 
/api/customer

and we are going to support few different types of requests

get 
get 
post
put
delete

so what you see here is

in terms of request types and endpoints is a standard convention referred to as REST full convenction

ReSt 
representational state transfer






********* building a web api

under controller create a api folder

create a controller
and choose webapi2 controller

CustomersController

plural

the tesxt guides us


add the line to global.as

the first things you want to note here is 

this is derived from ApiController

since we want to return a list of Customer
// GEt /api/customers

public IEnumerable <Customer> GetCustomers(){

}

we are gonna _context

so lets create a private field

initilize is in ctor

public Customer GetCustomer(){
.Customers.SingleOrDefault


 if customer == null
  throw new HttpResponseException(HttpStatusCode.NotFoun);

  so this is a part of restful convention 
  like if a resourse is not found we repond with not found

  other wise 
  return customer
}

// POST /api/customers

as i want to post it on collection

we should mark this action with http post
this action will only be called if we send a post request

[HttpPost]
public Customer CreateCustomer(Customer customer)

or 


public Customer PostCustomer(Customer customer)

but this can be a problem with when we refractor

so i would prefer to apply this [HttpPost]



if(!ModelState.IsValid)
 throw new HttpReponseException(httpstatuscode.badrequest)

 _context.Customers.Add(customer);
 _context.SaveChanges()


 // PUT /api/customer/1

 public void UpdateCustomer (int id){
 
if(!ModelState.IsValid)
 throw new HttpReponseException(httpstatuscode.badrequest)

 var customerInDb = singleorDefault( c => c.Id == id
 
 if null
	throw new HttpResponseException(HttpStatusCode.NotFound
);

  .name = name

  we can use automapper

  _context

  httpPut

  [HTTPdELETE]
  public void DeleteCustomer(int id){
  
  }
  .remove
  .saveChanges
 )
 }

